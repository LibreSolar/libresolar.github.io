import{_ as r,c as a,a1 as t,o}from"./chunks/framework.BDxlaA_J.js";const p=JSON.parse('{"title":"Firmware and Software","description":"","frontmatter":{},"headers":[],"relativePath":"software/index.md","filePath":"software/index.md","lastUpdated":1752654879000}'),i={name:"software/index.md"};function n(s,e,d,l,f,c){return o(),a("div",null,e[0]||(e[0]=[t('<h1 id="firmware-and-software" tabindex="-1">Firmware and Software <a class="header-anchor" href="#firmware-and-software" aria-label="Permalink to &quot;Firmware and Software&quot;">​</a></h1><p>We are using <a href="https://www.zephyrproject.org/" target="_blank" rel="noreferrer">Zephyr RTOS</a> for most of our firmware.</p><p>These are the some of the key advantages of Zephyr compared to other embedded operating systems:</p><ul><li>Excellent build system and customization (based on Devicetree and Kconfig from Linux kernel) that allows a clear separation between board specification and the firmware itself.</li><li>Great community and open governance, so it’s a truly community-driven open source project.</li><li>Strong focus on code quality, security and safety (aiming towards ISO 26262 and IEC 61508 certification)</li></ul><p>Libre Solar is also actively contributing to upstream Zephyr.</p><h2 id="further-information" tabindex="-1">Further information <a class="header-anchor" href="#further-information" aria-label="Permalink to &quot;Further information&quot;">​</a></h2><p>The C/C++ coding style for our firmware development is described <a href="https://github.com/LibreSolar/coding-style" target="_blank" rel="noreferrer">here</a>.</p>',7)]))}const h=r(i,[["render",n]]);export{p as __pageData,h as default};
